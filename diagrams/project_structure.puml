@startuml name projectTemplate
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml 

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/main/icons/devicons 
!define ICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5 

!include DEVICONS/python.puml
!include DEVICONS/docker.puml
!include ICONS/github.puml
!include ICONS/folder.puml
!include ICONS/file.puml

skinparam defaultFontName "Source Code Pro"

' --- Ссылки на файлы ---
!define ENV_EXAMPLE "vscode://file/C:/gleb/projects/projectTemplate/.env.example"
!define WORKFLOWS "vscode://file/C:/gleb/projects/projectTemplate/.github/workflows"
!define GITIGNORE "vscode://file/C:/gleb/projects/projectTemplate/.gitignore"
!define DOCKER_IGNORE "vscode://file/C:/gleb/projects/projectTemplate/.dockerignore"
!define DOCKERFILE "vscode://file/C:/gleb/projects/projectTemplate/Dockerfile"
!define DOCKER_COMPOSE_YAML "vscode://file/C:/gleb/projects/projectTemplate/docker-compose.yaml"
!define MAKEFILE "vscode://file/C:/gleb/projects/projectTemplate/Makefile"
!define README_MD "vscode://file/C:/gleb/projects/projectTemplate/README.md"
!define CONFIG_PY "vscode://file/C:/gleb/projects/projectTemplate/configs/config.py"
!define PATH_MANAGER_PY "vscode://file/C:/gleb/projects/projectTemplate/configs/path_manager.py"
!define PROJECT_STRUCTURE_PUML "vscode://file/C:/gleb/projects/projectTemplate/diagrams/project_structure.puml"
!define TEMP_CONTAINERS_PUML "vscode://file/C:/gleb/projects/projectTemplate/diagrams/temp_containers.puml"
!define INDEX_RST "vscode://file/C:/gleb/projects/projectTemplate/docs/index.rst"
!define REQUIREMENTS_TXT "vscode://file/C:/gleb/projects/projectTemplate/requirements.txt"
!define PRE_COMMIT_CONFIG_YAML "vscode://file/C:/gleb/projects/projectTemplate/.pre-commit-config.yaml"
!define COPIER_YAML "vscode://file/C:/gleb/projects/projectTemplate/copier.yaml"
!define MAIN_PY "vscode://file/C:/gleb/projects/projectTemplate/src/main.py"
!define LOGGER_PY "vscode://file/C:/gleb/projects/projectTemplate/src/utils/logger.py"
!define VSCODE_SETTINGS "vscode://file/C:/gleb/projects/projectTemplate/.vscode/settings.json"
!define DEPLOY_DOCS_YML "vscode://file/C:/gleb/projects/projectTemplate/.github/workflows/deploy_docs.yml"

' --- Стили контейнеров ---
AddElementTag("config", $bgColor="#ced4da", $fontColor="black", $borderColor="#adb5bd")
AddElementTag("code", $bgColor="#bce3cc", $fontColor="black", $borderColor="#77c29e")
AddElementTag("utils", $bgColor="#f8c2c2", $fontColor="black", $borderColor="#e27a7a")
AddElementTag("docs", $bgColor="#ffd8b2", $fontColor="black", $borderColor="#fca55d")
AddElementTag("tests", $bgColor="#f8c2c2", $fontColor="black", $borderColor="#e27a7a")
AddElementTag("ci", $bgColor="#b3d4fc", $fontColor="black", $borderColor="#6ea8fe")
AddElementTag("docker", $bgColor="#f5e0b7", $fontColor="black", $borderColor="#d6b656")
AddElementTag("misc", $bgColor="#e9ecef", $fontColor="black", $borderColor="#dee2e6")

LAYOUT_LEFT_RIGHT()

Container_Boundary(projectTemplate, "projectTemplate") {

  Container_Boundary(configs, "configs/", $tags="config") {
    Container(config_py, "config.py", "Python", "Глобальные параметры", $tags="config", $sprite="python", $link=CONFIG_PY)
  }

  Container_Boundary(github_section, ".github + CI", $tags="ci") {
    Container(github_workflows, "workflows/", "Папка", "GitHub Actions workflows", $tags="ci", $sprite="folder", $link=WORKFLOWS)
    Container(deploy_docs_yml, "deploy_docs.yml", "YAML", "Деплой документации", $tags="ci", $sprite="file", $link=DEPLOY_DOCS_YML)
    Container(makefile, "Makefile", "Make", "Автоматизация задач", $tags="ci", $sprite="file", $link=MAKEFILE)
  }

  Container_Boundary(docker, "Docker", $tags="docker") {
    Container(dockerfile, "Dockerfile", "Docker", "Сборка образа", $tags="docker", $sprite="docker", $link=DOCKERFILE)
    Container(docker_compose, "docker-compose.yaml", "Docker Compose", "Оркестрация", $tags="docker", $sprite="docker", $link=DOCKER_COMPOSE_YAML)
  }

  Container_Boundary(documentation, "docs/", $tags="docs") {
    Container(index_rst, "index.rst", "reStructuredText", "Главная страница", $tags="docs", $sprite="file", $link=INDEX_RST)
  }

  Container_Boundary(src, "src/", $tags="code") {
    Container(main_py, "main.py", "Python", "Точка входа", $tags="code", $sprite="python", $link=MAIN_PY)

    Container_Boundary(utils, "utils/", $tags="utils") {
      Container(logger_py, "logger.py", "Python", "Логирование", $tags="utils", $sprite="python", $link=LOGGER_PY)
    }
  }

  Container_Boundary(tests, "tests/", $tags="tests") {
    Container(tests_folder, "tests/", "Юнит-тесты", $tags="tests", $sprite="folder")
  }

  Container_Boundary(root_files, "Конфигурация", $tags="misc") {
    Container(requirements_txt, "requirements.txt", "TXT", "Зависимости Python", $tags="misc", $sprite="file", $link=REQUIREMENTS_TXT)
    Container(pre_commit_config_yaml, ".pre-commit-config.yaml", "YAML", "Pre-commit хуки", $tags="misc", $sprite="file", $link=PRE_COMMIT_CONFIG_YAML)
    Container(gitignore, ".gitignore", "TXT", "Игнорируемые файлы", $tags="misc", $sprite="file", $link=GITIGNORE)
    Container(dockerignore, ".dockerignore", "TXT", "Docker игнор", $tags="misc", $sprite="file", $link=DOCKER_IGNORE)
    Container(env, ".env", "ENV", "Переменные окружения", $tags="misc", $sprite="file", $link=ENV)
    Container(vscode_settings, ".vscode/", "Папка", "Настройки VS Code", $tags="misc", $sprite="folder", $link=VSCODE_SETTINGS)
    Container(copier_yaml, "copier.yaml", "YAML", "Шаблон генерации", $tags="misc", $sprite="file", $link=COPIER_YAML)
  }
}

Container_Boundary(github, ".github + CI", $tags="ci") {
    Container(git_repo, "Git Hub", "VCS", "Хранение кода", $tags="external", $sprite="github")
    Container(github_actions, "GitHub Actions", "CI/CD", "Автоматизация", $tags="external", $sprite="github")
  }


' --- Связи ---
Rel(config_py, requirements_txt, "Читает переменные окружения", $tags="data")
Rel(main_py, config_py, "Использует конфиги", $tags="data")
Rel(main_py, logger_py, "Использует логгер", $tags="data")

Rel(tests_folder, main_py, "Тестирует", $tags="test")

Rel(github_actions, git_repo, "Слежка за изменениями", $tags="infra")
Rel(github_actions, github_workflows, "Читает workflow", $tags="infra")
Rel(github_workflows, makefile, "Вызывает команды", $tags="infra")
Rel(docker_compose, dockerfile, "Использует", $tags="infra")
Rel(dockerfile, requirements_txt, "Использует зависимости", $tags="infra")

Rel(github_actions, docker, "Собирает образ", $tags="infra")

SHOW_LEGEND()
skinparam legendBackgroundColor #f8f9fa
skinparam legendBorderColor #ced4da
@enduml