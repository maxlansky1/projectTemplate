"""
–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Pydantic 2.
"""

import os
from typing import ClassVar, Optional

from configs.schemas.ai import (
    AssemblyAISettings,
    ElevenLabsSettings,
    OpenRouterSettings,
)
from configs.schemas.base import BaseConfig
from configs.schemas.database import DatabaseSettings
from configs.schemas.file_processing import MediaProcessingSettings
from configs.schemas.storage import StorageSettings
from configs.schemas.telegram import TelegramSettings
from src.utils.logger import get_logger

# –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
logger = get_logger(__name__)


class AppSettings(BaseConfig):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """

    # –í–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    telegram: TelegramSettings = TelegramSettings()
    openrouter: OpenRouterSettings = OpenRouterSettings()
    assemblyai: AssemblyAISettings = AssemblyAISettings()
    elevenlabs: ElevenLabsSettings = ElevenLabsSettings()
    storage: StorageSettings = StorageSettings()
    file_processing: MediaProcessingSettings = MediaProcessingSettings()
    database: DatabaseSettings = DatabaseSettings()

    # –°–∏–Ω–≥–ª—Ç–æ–Ω –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    _instance: ClassVar[Optional["AppSettings"]] = None

    def __init__(self, **data):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        super().__init__(**data)
        # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É /data, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        self.storage.data_dir.mkdir(exist_ok=True)
        # –õ–æ–≥–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–∞–º–ø –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        self._log_safe_configuration()

    def _log_safe_configuration(self):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏."""
        try:
            safe_dump = self.get_safe_dump()
            logger.info("üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            logger.debug(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏: {safe_dump}")
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {e}")

    @classmethod
    def get_instance(cls) -> "AppSettings":
        """–ü–æ–ª—É—á–∏—Ç—å —Å–∏–Ω–≥–ª—Ç–æ–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        if cls._instance is None:
            cls._instance = cls()
        return cls._instance

    @property
    def is_fully_configured(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        return self.telegram.is_configured and bool(
            self.openrouter.model_name and self.openrouter.model_name.strip()
        )

    def get_safe_dump(self) -> dict:
        """–ü–æ–ª—É—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–∞–º–ø –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
        dump = self.model_dump()

        # –£–¥–∞–ª—è–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        sensitive_keys = [
            "token",
            "api_key",
            "TELEGRAM_BOT_TOKEN",
            "ASSEMBLYAI_API_KEY",
            "ELEVENLABS_API_KEY",
        ]

        def sanitize_dict(d: dict) -> dict:
            """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ—á–∏—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –æ—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
            result = {}
            for key, value in d.items():
                if any(
                    sensitive_key.lower() in key.lower()
                    for sensitive_key in sensitive_keys
                ):
                    result[key] = "***"
                elif isinstance(value, dict):
                    result[key] = sanitize_dict(value)
                else:
                    result[key] = value
            return result

        return sanitize_dict(dump)


# –ù–ï –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä—É–µ–º –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Sphinx
if os.environ.get("SPHINX_BUILD") is None:
    # —Å–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings = AppSettings.get_instance()
else:
    # –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ‚Äî –ª–∏–±–æ None, –ª–∏–±–æ –ª–µ–Ω–∏–≤—ã–π –º–æ–∫ / –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
    settings = None
