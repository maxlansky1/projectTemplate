name: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

on:
  push:
    branches:
      - main

jobs:
  notify:
    runs-on: ubuntu-latest
    environment: vps_deploy
    steps:

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v3

      - name: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        run: |
          echo "üîç DEBUG OUTPUT:"
          echo "SSH_HOST:       ${{ secrets.SSH_HOST }}"
          echo "SSH_USER:       ${{ secrets.SSH_USER }}"
          echo "SSH_PORT:       ${{ secrets.SSH_PORT }}"
          echo "SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}"
          echo "DEPLOY_PATH:    ${{ secrets.DEPLOY_PATH }}"
          echo "TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}"
          echo "REPO_NAME:      ${{ github.repository }}"
          echo "COMMIT_SHA:     ${{ github.sha }}"

          # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç—ã–µ –ª–∏ –∫–ª—é—á–µ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
          if [[ -z "${{ secrets.SSH_HOST }}" ]]; then echo "‚ùå SSH_HOST is empty"; fi
          if [[ -z "${{ secrets.SSH_USER }}" ]]; then echo "‚ùå SSH_USER is empty"; fi
          if [[ -z "${{ secrets.SSH_PORT }}" ]]; then echo "‚ùå SSH_PORT is empty"; fi
          if [[ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]]; then echo "‚ùå SSH_PRIVATE_KEY is empty"; fi
          if [[ -z "${{ secrets.DEPLOY_PATH }}" ]]; then echo "‚ùå DEPLOY_PATH is empty"; fi

      - name: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π
        id: changes
        run: |
          if git rev-parse HEAD^ &>/dev/null; then
            changed_files=$(git diff --name-only HEAD^)
          else
            echo "–ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç ‚Äî —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞"
            echo "run_rebuild=true" >> $GITHUB_ENV
            exit 0
          fi

          # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å —Ñ–∞–π–ª—ã docker –∏–ª–∏ requirements - –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞, –≤ –¥—Ä—É–≥–æ–º —Å–ª—É—á–∞–µ —Ä–µ—Å—Ç–∞—Ä—Ç
          if echo "$changed_files" | grep -E 'Dockerfile|docker-compose|requirements.txt' > /dev/null; then
            echo "run_rebuild=true" >> $GITHUB_ENV
          else
            echo "run_rebuild=false" >> $GITHUB_ENV
          fi
      - name: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        run: |
          echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV

      - name: –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –ø–æ SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ 
            cd "${{ secrets.DEPLOY_PATH }}/${{ env.REPO_NAME }}"
            
            # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –ª—é–±—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            git reset --hard

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ git –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–ª–∏—è–Ω–∏—è
            git config pull.rebase false

            # –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ main
            git pull

            # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
            if [ "${{ env.run_rebuild }}" = "true" ]; then
              echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—ã–π rebuild..."
              make rebuild
            else
              echo "üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏..."
              make restart
            fi

            docker ps -a

      - name: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
        if: success()
        run: |
          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          CONTAINERS=$(docker ps -a --format "{{.Image}} {{.Status}} {{.Ports}}"
          
          echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: $CONTAINERS"

          # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
          curl -s -X POST \
            "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d parse_mode="Markdown" \
            -d text="‚úÖ *–°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ*

            üì¶ *Repo:* \`${REPO_NAME}\`
            üìå *Commit:* [${COMMIT_SHA:0:7}](https://github.com/${REPO_NAME}/commit/${COMMIT_SHA})
            üïí *Time:* $(date '+%Y-%m-%d %H:%M:%S')

            üì¶ *–ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:*
            \`\`\`
            $CONTAINERS
            \`\`\`

            üîó [View in GitHub Actions](https://github.com/${REPO_NAME}/actions/runs/${GITHUB_RUN_ID})"
            
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          REPO_NAME: ${{ github.repository }}
          COMMIT_SHA: ${{ github.sha }}