# Введение

`projectTemplate` — это современный и гибкий шаблон для создания Python-проектов, разработанный с учётом передовых практик разработки, документирования и автоматизации.

Шаблон создан для:

- **Быстрого старта новых проектов**: Избавляет от необходимости каждый раз настраивать CI/CD, документацию, pre-commit и другие важные элементы.
- **Единообразия**: Обеспечивает стандартную структуру и подходы для всех ваших Python-проектов.
- **Поддержки качества кода**: Включает готовые инструменты для проверки кода, документирования и автоматизации.
- **Упрощения сопровождения**: Структура проекта и документации легко масштабируется и поддерживается.

Шаблон будет полезен:

- **Разработчикам Python**, желающим ускорить запуск новых проектов.
- **Командам разработчиков**, стремящимся к унификации подходов и повышению качества кода.
- **Архитекторам**, которым важна визуализация структуры проекта и его документирование.

## Основные возможности

- **Контейнеризация**: Поддержка Docker и Docker Compose для изоляции и удобства развертывания.
- **Документирование**: Интеграция с Sphinx и MyST Parser для написания документации на Markdown.
- **Визуализация**: Инструменты для автоматической генерации UML-диаграмм (PlantUML).
- **Контроль качества**: Настроенные pre-commit хуки для проверки кода и стиля перед коммитом.
- **CI/CD**: Готовые пайплайны для автоматического тестирования и публикации документации на GitHub Pages, деплой вашего проекта на VPS
- **Автоматизация**: Удобный `Makefile` для выполнения стандартных операций.

## Структура документации

Документация проекта организована по принципам диатаксиса:

- **Руководства**: Пошаговые инструкции для новичков.
- **Объяснения**: Понимание того, как и почему устроены компоненты шаблона.
- **Рецепты**: Решения типичных задач.
- **Справочники**: Технические данные, API, конфигурации.